version: '3.1'

services:
    login_server:
        build:
            context: .
            dockerfile: docker/Dockerfile
        container_name: login-server
        command: /bin/sh -c "/app/Valhalla -type login -config ./docker/docker_config_login.toml"
        restart: unless-stopped
        volumes:
            - ./docker/docker_config_login.toml:/app/docker/docker_config_login.toml
            - ./Data.nx:/app/Data.nx
        ports:
            - 8484:8484
        depends_on:
            - db

    world_server:
        build:
            context: .
            dockerfile: docker/Dockerfile
        container_name: world-server
        command: /bin/sh -c "/app/Valhalla -type world -config ./docker/docker_config_world.toml"
        restart: unless-stopped
        volumes:
            - ./docker/docker_config_world.toml:/app/docker/docker_config_world.toml
            - ./Data.nx:/app/Data.nx
        ports:
            - 8584:8584
        depends_on:
            - login_server

    channel_server_1:
        build:
            context: .
            dockerfile: docker/Dockerfile
        container_name: channel-server-1
        command: /bin/sh -c "/app/Valhalla -type channel -config ./docker/docker_config_channel.toml"
        restart: unless-stopped
        volumes:
            - ./docker/docker_config_channel_1.toml:/app/docker/docker_config_channel.toml
            - ./Data.nx:/app/Data.nx
        ports:
            - 8685:8685
        depends_on:
            - world_server

    channel_server_2:
        build:
            context: .
            dockerfile: docker/Dockerfile
        container_name: channel-server-2
        command: /bin/sh -c "/app/Valhalla -type channel -config ./docker/docker_config_channel.toml"
        restart: unless-stopped
        volumes:
            - ./docker/docker_config_channel_2.toml:/app/docker/docker_config_channel.toml
            - ./Data.nx:/app/Data.nx
        ports:
            - 8686:8686
        depends_on:
            - world_server

    db:
        image: mysql:5.7
        restart: unless-stopped
        volumes:
            - db-data:/var/lib/mysql
            - ./sql:/docker-entrypoint-initdb.d
        environment:
            MYSQL_ROOT_PASSWORD: password
            MYSQL_DATABASE: maplestory
        ports:
            - 3306:3306

    adminer:
        image: adminer
        restart: unless-stopped
        environment:
            ADMINER_DEFAULT_DB_DRIVER: mysql
            ADMINER_DEFAULT_DB_HOST: db
            ADMINER_DEFAULT_DB_NAME: maplestory
            ADMINER_DESIGN: nette
        ports:
            - 8080:8080
        depends_on:
            - db

    prometheus:
        image: prom/prometheus:master
        restart: unless-stopped
        volumes:
            - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
        ports:
            - 9090:9090
    grafana:
        image: grafana/grafana:6.7.3
        restart: unless-stopped
        # environment:
        #     GF_INSTALL_PLUGINS: ""
        ports:
            - 3000:3000

volumes:
    db-data: